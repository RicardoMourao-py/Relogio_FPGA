------------------------------------------- SETUP -----------------------------------------
SETUP:
-- Zera os displays de sete segmentos
LDI R0, $0    -- Carrega o registrador com o valor zero
STA R0, @288  -- Armazena o valor do registrador em HEX0
STA R0, @289  -- Armazena o valor do registrador em HEX1
STA R0, @290  -- Armazena o valor do registrador em HEX2
STA R0, @291  -- Armazena o valor do registrador em HEX3
STA R0, @292  -- Armazena o valor do registrador em HEX4
STA R0, @293  -- Armazena o valor do registrador em HEX5

-- Apaga os LED's
LDI R0, $0    -- Carrega o registrador com o valor zero
STA R0, @256  -- Armazena o valor do registrador em LEDR0 - LEDR7
STA R0, @257  -- Armazena o valor do registrador em LEDR8
STA R0, @258  -- Armazena o valor do registrador em LEDR9

-- Inicializa constantes
LDI R0, $0    -- Carrega o registrador com o valor zero
STA R0, @0    -- MEM[0] = R0 = 0
LDI R0, $1    -- Carrega o registrador com o valor um
STA R0, @1    -- MEM[1] = R0 = 1
LDI R0, $2    -- Carrega o registrador com o valor dois
STA R0, @2    -- MEM[2] = R0 = 2
LDI R0, $3    -- Carrega o registrador com o valor tres
STA R0, @3    -- MEM[3] = R0 = 3
LDI R0, $5    -- Carrega o registrador com o valor cinco
STA R0, @5    -- MEM[5] = R0 = 5
LDI R0, $9    -- Carrega o registrador com o valor nove
STA R0, @9    -- MEM[9] = R0 = 9
LDI R0, $0    -- Carrega o registrador com o valor zero
STA R0, @10    -- MEM[10] = R0 = 0
STA R0, @11    -- MEM[11] = R0 = 0
STA R0, @12    -- MEM[12] = R0 = 0
STA R0, @13    -- MEM[13] = R0 = 0
STA R0, @14    -- MEM[14] = R0 = 0
STA R0, @15    -- MEM[15] = R0 = 0

------------------------------------ LOGICA ---------------------------------------------------------
-- Realiza a leitura do segundo
LEITURA_SEGUNDO:
LDA R7, @352  -- Carrega o registrador com a leitura do segundo
ANDI R7, $1   -- Limpa lixo da leitura segundo
CEQ R7, @1    -- Se o registrador for igual a 1
JEQ @INCREMENTA_SEGUNDO_UNIDADE
JMP @LEITURA_SEGUNDO

-------- Conta os segundos -------------------------
-- Unidade dos segundos
INCREMENTA_SEGUNDO_UNIDADE:
STA R0, @511  -- Limpa o flipflop dos segundos
LDA R1, @10   -- Carrega o registrador com MEM[10]

CEQ R1, @9    -- Se o registrador for igual a 9
JEQ @INCREMENTA_SEGUNDO_DEZENA

SOMA R1, @1   -- R1 = R1 + MEM[1]
STA R1, @10  -- Armazena o valor do registrador em MEM[10] (unidade segundo)
STA R1, @288  -- Armazena o valor do registrador em HEX0
JMP @LEITURA_SEGUNDO

-- Dezena dos segundos
INCREMENTA_SEGUNDO_DEZENA:
LDA R2, @11   -- Carrega o registrador com MEM[11]
CEQ R2, @5    -- Se o registrador for igual a 5
JEQ @INCREMENTA_MINUTO_UNIDADE

LDI R1, $0    -- Carrega o registrador com o valor zero
STA R1, @10   -- Armazena o valor do registrador em MEM[10] (unidade segundo)
STA R1, @288  -- Armazena o valor do registrador em HEX0

LDA R2, @11   -- Carrega o registrador com MEM[11]
SOMA R2, @1   -- R2 = R2 + MEM[1]
STA R2, @11  -- Armazena o valor do registrador em MEM[11] (dezena segundo)
STA R2, @289  -- Armazena o valor do registrador em HEX1
JMP @LEITURA_SEGUNDO

-------- Conta os minutos -------------------------
-- Unidade dos Minutos
INCREMENTA_MINUTO_UNIDADE:
LDA R3, @12   -- Carrega o registrador com MEM[12]
CEQ R3, @9    -- Se o registrador for igual a 9
JEQ @INCREMENTA_MINUTO_DEZENA

LDI R1, $0    -- Carrega o registrador com o valor zero
STA R1, @10   -- Armazena o valor do registrador em MEM[10] (unidade segundo)
STA R1, @288  -- Armazena o valor do registrador em HEX0

LDI R2, $0    -- Carrega o registrador com o valor zero
STA R2, @11   -- Armazena o valor do registrador em MEM[11] (dezena segundo)
STA R2, @289  -- Armazena o valor do registrador em HEX1

LDA R3, @12   -- Carrega o registrador com MEM[12]
SOMA R3, @1   -- R3 = R3 + MEM[1]
STA R3, @12  -- Armazena o valor do registrador em MEM[12] (unidade minuto)
STA R3, @290  -- Armazena o valor do registrador em HEX2
JMP @LEITURA_SEGUNDO

-- Dezenas dos Minutos
INCREMENTA_MINUTO_DEZENA:
LDA R4, @13   -- Carrega o registrador com MEM[13]
CEQ R4, @5    -- Se o registrador for igual a 5
JEQ @INCREMENTA_HORA_UNIDADE

LDI R1, $0    -- Carrega o registrador com o valor zero
STA R1, @10   -- Armazena o valor do registrador em MEM[10] (unidade segundo)
STA R1, @288  -- Armazena o valor do registrador em HEX0

LDI R2, $0    -- Carrega o registrador com o valor zero
STA R2, @11   -- Armazena o valor do registrador em MEM[11] (dezena segundo)
STA R2, @289  -- Armazena o valor do registrador em HEX1

LDI R3, $0    -- Carrega o registrador com o valor zero
STA R3, @12   -- Armazena o valor do registrador em MEM[12] (unidade minuto)
STA R3, @290  -- Armazena o valor do registrador em HEX2

LDA R4, @13   -- Carrega o registrador com MEM[13]
SOMA R4, @1   -- R4 = R4 + MEM[1]
STA R4, @13  -- Armazena o valor do registrador em MEM[13] (dezena minuto)
STA R4, @291  -- Armazena o valor do registrador em HEX3
JMP @LEITURA_SEGUNDO

-------- Conta as Horas -------------------------
-- Unidade das Horas
INCREMENTA_HORA_UNIDADE:
LDA R5, @14   -- Carrega o registrador com MEM[14]
CEQ R5, @9    -- Se o registrador for igual a 9
JEQ @INCREMENTA_HORA_DEZENA

LDA R5, @14   -- Carrega o registrador com MEM[14]
CEQ R5, @3    -- Se o registrador for igual a 3
JEQ @VERIFICA_2

CONTINUA:
LDI R1, $0    -- Carrega o registrador com o valor zero
STA R1, @10   -- Armazena o valor do registrador em MEM[10] (unidade segundo)
STA R1, @288  -- Armazena o valor do registrador em HEX0

LDI R2, $0    -- Carrega o registrador com o valor zero
STA R2, @11   -- Armazena o valor do registrador em MEM[11] (dezena segundo)
STA R2, @289  -- Armazena o valor do registrador em HEX1

LDI R3, $0    -- Carrega o registrador com o valor zero
STA R3, @12   -- Armazena o valor do registrador em MEM[12] (unidade minuto)
STA R3, @290  -- Armazena o valor do registrador em HEX2

LDI R4, $0    -- Carrega o registrador com o valor zero
STA R4, @13   -- Armazena o valor do registrador em MEM[13] (dezena minuto)
STA R4, @291  -- Armazena o valor do registrador em HEX3

LDA R5, @14   -- Carrega o registrador com MEM[14]
SOMA R5, @1   -- R5 = R5 + MEM[1]
STA R5, @14  -- Armazena o valor do registrador em MEM[14] (unidade hora)
STA R5, @292  -- Armazena o valor do registrador em HEX4
JMP @LEITURA_SEGUNDO

-- Dezena das Horas
INCREMENTA_HORA_DEZENA:
-- LDA R6, @15   -- Carrega o registrador com MEM[15]
-- CEQ R6, @2    -- Se o registrador for igual a 2
-- JEQ @VERIFICA_4

LDI R1, $0    -- Carrega o registrador com o valor zero
STA R1, @10   -- Armazena o valor do registrador em MEM[10] (unidade segundo)
STA R1, @288  -- Armazena o valor do registrador em HEX0

LDI R2, $0    -- Carrega o registrador com o valor zero
STA R2, @11   -- Armazena o valor do registrador em MEM[11] (dezena segundo)
STA R2, @289  -- Armazena o valor do registrador em HEX1

LDI R3, $0    -- Carrega o registrador com o valor zero
STA R3, @12   -- Armazena o valor do registrador em MEM[12] (unidade minuto)
STA R3, @290  -- Armazena o valor do registrador em HEX2

LDI R4, $0    -- Carrega o registrador com o valor zero
STA R4, @13   -- Armazena o valor do registrador em MEM[13] (dezena minuto)
STA R4, @291  -- Armazena o valor do registrador em HEX3

LDI R5, $0    -- Carrega o registrador com o valor zero
STA R5, @14   -- Armazena o valor do registrador em MEM[14] (unidade hora)
STA R5, @292  -- Armazena o valor do registrador em HEX4

LDA R6, @15   -- Carrega o registrador com MEM[15]
SOMA R6, @1   -- R6 = R6 + MEM[1]
STA R6, @15  -- Armazena o valor do registrador em MEM[14] (unidade hora)
STA R6, @293  -- Armazena o valor do registrador em HEX5
JMP @LEITURA_SEGUNDO

VERIFICA_2:
LDA R6, @15   -- Carrega o registrador com MEM[14]
CEQ R6, @2    -- Se o registrador for igual a 2
JEQ @SETUP
JMP @CONTINUA